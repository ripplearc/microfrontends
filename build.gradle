// Top-level build file where you can add configuration options common to all sub-projects/modules.

apply from: 'gradle/dependencies.gradle'

buildscript {
	ext.kotlin_version = '1.3.70'
	repositories {
		google()
		jcenter()

	}
	dependencies {
		classpath 'com.android.tools.build:gradle:3.6.2'
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
		classpath 'com.google.gms:google-services:4.3.3'
		classpath 'com.google.firebase:firebase-crashlytics-gradle:2.0.0-beta02'
		classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.10.1"
		classpath 'io.realm:realm-gradle-plugin:6.0.1'
	}
}

allprojects {
	repositories {
		google()
		jcenter()
	}
}

ext {
	minSdkVersion = 23
	targetSdkVersion = 29
	compileSdkVersion = 29
	appVersionCode = 1
	appVersionName = "0.1.0"
	sourceCompatibilityVersion = JavaVersion.VERSION_1_8
	targetCompatibilityVersion = JavaVersion.VERSION_1_8
	applicationIdBase = "com.ripplearc.heavy.groudvisual"
	testApplicationId = "${applicationIdBase}.test"
	testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
	jvmTargetVersion = "1.8"
}


subprojects {
	afterEvaluate { project ->
		repositories {
			jcenter()
			google()
			mavenCentral()
		}

		if (project.hasProperty('android')) {
			android {
				compileSdkVersion rootProject.ext.compileSdkVersion

				defaultConfig {
					minSdkVersion rootProject.ext.minSdkVersion
					targetSdkVersion rootProject.ext.targetSdkVersion
					versionCode rootProject.ext.appVersionCode
					versionName rootProject.ext.appVersionName
				}

				compileOptions {
					sourceCompatibility rootProject.ext.sourceCompatibilityVersion
					targetCompatibility rootProject.ext.targetCompatibilityVersion
				}

				lintOptions {
					abortOnError true
				}

				kotlinOptions {
					jvmTarget = rootProject.ext.jvmTargetVersion
				}
			}

			dependencies {
				deps[project.name].each { configuration, dependencies ->
					dependencies.each { dependency ->
						"${configuration}"(dependency)
					}
				}
			}
		}
	}
}

task clean(type: Delete) {
	delete rootProject.buildDir
}
